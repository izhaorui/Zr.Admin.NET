<template>
  <div class="app-container">
    <!-- :model属性用于表单验证使用 比如下面的el-form-item 的 prop属性用于对表单值进行验证操作 -->
    <el-form :model="queryParams" label-position="left" inline ref="queryForm" :label-width="labelWidth" v-show="showSearch" @submit.native.prevent>
${vueQueryFormHtml}
      <el-row class="mb8" style="text-align:center">
        <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
      </el-row>
    </el-form>
    <!-- 工具区域 -->
    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button type="primary" v-hasPermi="['${replaceDto.PermissionPrefix}:add']" plain icon="el-icon-plus" size="mini" @click="handleAdd">新增</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button type="success" :disabled="single" v-hasPermi="['${replaceDto.PermissionPrefix}:update']" plain icon="el-icon-edit" size="mini" @click="handleUpdate">修改</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button type="danger" :disabled="multiple" v-hasPermi="['${replaceDto.PermissionPrefix}:delete']" plain icon="el-icon-delete" size="mini" @click="handleDelete">删除</el-button>
      </el-col>
$if(replaceDto.ShowBtnExport)
      <el-col :span="1.5">
        <el-button type="warning" plain icon="el-icon-download" size="mini" @click="handleExport" v-hasPermi="['${replaceDto.PermissionPrefix}:export']">导出</el-button>
      </el-col>
$end
$if(genTable.SortField != "" && 1 == 2)
      <el-col :span="1.5">
        <el-button type="info" plain icon="el-icon-edit" size="mini" @click="handleShowSort" v-hasPermi="['${replaceDto.PermissionPrefix}:update']">修改排序</el-button>
      </el-col>
$end
      <right-toolbar :showSearch.sync="showSearch" @queryTable="getList"></right-toolbar>
    </el-row>

    <!-- 数据区域 -->
    <el-table :data="dataList" v-loading="loading" ref="table" border highlight-current-row @selection-change="handleSelectionChange">
      <el-table-column type="selection" width="50" align="center"/>
${VueViewListContent}
      <el-table-column label="操作" align="center" width="200">
        <template slot-scope="scope">
          <el-button v-hasPermi="['${replaceDto.PermissionPrefix}:update']" type="text" icon="el-icon-edit" @click="handleUpdate(scope.row)">编辑</el-button>
          <el-button v-hasPermi="['${replaceDto.PermissionPrefix}:delete']" type="text" icon="el-icon-delete" @click="handleDelete(scope.row)">删除</el-button>
        </template>
      </el-table-column>
    </el-table>
    <pagination class="mt10" background :total="total" :page.sync="queryParams.pageNum" :limit.sync="queryParams.pageSize" @pagination="getList" />

    <!-- 添加或修改${genTable.functionName}对话框 -->
    <el-dialog :title="title" :lock-scroll="false" :visible.sync="open" >
      <el-form ref="form" :model="form" :rules="rules" :label-width="formLabelWidth">
        <el-row>
${VueViewFormContent}
        </el-row>
      </el-form>
      <div slot="footer" class="dialog-footer" v-if="btnSubmitVisible">
        <el-button type="primary" @click="submitForm">确 定</el-button>
        <el-button @click="cancel">取 消</el-button>
      </div>
    </el-dialog>

  </div>
</template>
<script>
import { 
  list${genTable.BusinessName},
  add${genTable.BusinessName},
  del${genTable.BusinessName},
  update${genTable.BusinessName},
  get${genTable.BusinessName},
  export${genTable.BusinessName},
$if(genTable.SortField != "" && genTable.SortField != null)
  changeSort
$end
} from '@/api/${genTable.ModuleName}/${lowerBusinessName}.js';

export default {
  name: "${genTable.BusinessName}",
  data() {
    return {
      labelWidth: "100px",
      formLabelWidth:"100px",
      // 选中${replaceDto.FistLowerPk}数组
      ids: [],
      // 非单个禁用
      single: true,
      // 非多个禁用
      multiple: true,
      // 遮罩层
      loading: true,
      // 显示搜索条件
      showSearch: true,
      // 查询参数
      queryParams: {
        pageNum: 1,
        pageSize: 20,
$foreach(item in genTable.Columns)
$if(item.IsQuery == true)
        ${item.CsharpFieldFl}: undefined,
$end
$end
      },
      // 弹出层标题
      title: "",
      // 是否显示弹出层
      open: false,
      // 表单参数
      form: {},
      columns: [
$set(index = 0)
$foreach(column in genTable.Columns)
        { index: $index, key: '${column.CsharpFieldFl}', label: `${column.ColumnComment}`, checked: $if(index < 9) true $else false $end },
$set(index = index + 1)
$end
      ],
$foreach(item in genTable.Columns)
$if((item.HtmlType == "radio" || item.HtmlType == "select" || item.HtmlType == "checkbox"))
      // ${item.ColumnComment}选项列表
      ${item.CsharpFieldFl}Options: [],
$elseif(item.HtmlType == "datetime" && item.IsQuery == true)
      //${item.ColumnComment}时间范围
      dateRange${item.CsharpFieldFl}: [],
$end
$end
$if(genTable.SortField != "" && genTable.SortField != null)
      // 是否显示编辑排序
      showEditSort: false,
$end
      // 数据列表
      dataList: [],
      // 总记录数
      total: 0,
      // 提交按钮是否显示
      btnSubmitVisible: true,
      // 表单校验
      rules: {
$foreach(column in genTable.Columns)
$if(column.IsRequired)
        ${column.CsharpFieldFl}: [
          { required: true, message: "${column.ColumnComment}不能为空", trigger: $if(column.htmlType == "select")"change"$else"blur"$end
$if(column.CsharpType == "int" || column.CsharpType == "long"), type: "number"$end }
        ],
$end
$end
      },
    };
  },
  created() {
    // 列表数据查询
    this.getList();

    $set(index = 0)
    var dictParams = [
$foreach(item in genTable.Columns)
$if((item.HtmlType == "radio" || item.HtmlType == "select" || item.HtmlType == "checkbox") && item.DictType != "")
      { dictType: "${item.DictType}", columnName: "${item.ColumnName}Options" },
$set(index = index + 1)
$end
$end
    ];
$if(index > 0)
    this.getDicts(dictParams).then((response) => {
      response.data.forEach((element) => {
        this[element.columnName] = element.list;
      });
    });
$end
  },
  methods: {
    // 查询数据
    getList() {
$foreach(item in genTable.Columns)
$if(item.HtmlType == "datetime" && item.IsQuery == true)
      this.queryParams["begin${item.CsharpFieldFl}"] = this.addDateRange2(this.dateRange${item.CsharpFieldFl}, 0);
      this.queryParams["end${item.CsharpFieldFl}"] = this.addDateRange2(this.dateRange${item.CsharpFieldFl}, 1);
$end
$end
      this.loading = true;
      list${genTable.BusinessName}(this.queryParams).then(res => {
         if (res.code == 200) {
           this.dataList = res.data.result;
           this.total = res.data.totalNum;
           this.loading = false;
         }
       })
    },
    // 取消按钮
    cancel() {
      this.open = false;
      this.reset();
    },
    // 重置数据表单
    reset() {
      this.form = {
$foreach(item in genTable.Columns)
$if((item.IsEdit || item.IsInsert))
        $item.CsharpFieldFl: undefined,
$end
$if((item.HtmlType == "checkbox"))
        ${item.ColumnName}Checked: [],
$end
$end
      };
      this.resetForm("form");
    },
    /** 重置查询操作 */
    resetQuery() {
      this.timeRange = [];
$foreach(item in genTable.Columns)
$if(item.HtmlType == "datetime" && item.IsQuery == true)
      //${item.ColumnComment}时间范围
      this.dateRange${item.CsharpFieldFl}= [];
$end
$end
      this.resetForm("queryForm");
      this.handleQuery();
    },
    // 多选框选中数据
    handleSelectionChange(selection) {
      this.ids = selection.map((item) => item.${replaceDto.FistLowerPk});
      this.single = selection.length != 1
      this.multiple = !selection.length;
    },
    /** 搜索按钮操作 */
    handleQuery() {
      this.queryParams.pageNum = 1;
      this.getList();
    },
    /** 新增按钮操作 */
    handleAdd() {
      this.reset();
      this.open = true;
      this.title = "添加";
    },
    /** 删除按钮操作 */
    handleDelete(row) {
      const Ids = row.${replaceDto.FistLowerPk} || this.ids;

      this.${confirm}confirm('是否确认删除参数编号为"' + Ids + '"的数据项？')
        .then(function () {
          return del${genTable.BusinessName}(Ids);
        })
        .then(() => {
          this.handleQuery();
          this.msgSuccess("删除成功");
        })
        .catch(() => {});
    },
    /** 修改按钮操作 */
    handleUpdate(row) {
      this.reset();
      const id = row.${replaceDto.FistLowerPk} || this.ids;
      get${genTable.BusinessName}(id).then((res) => {
        const { code, data } = res;
        if (code == 200) {
          this.open = true;
          this.title = "修改数据";

          this.form = {
            ...data,
$foreach(item in genTable.Columns)
$if(item.HtmlType == "checkbox")
            ${item.ColumnName}Checked: data.${item.columnName} ? data.${item.columnName}.split(',') : [],
$end
$end
          };
        }
      });
    },
$if(genTable.SortField != "" && genTable.SortField != null)
    // 显示编辑排序
    handleShowSort() {
      this.showEditSort = !this.showEditSort;
    },
    // 保存排序
    handleChangeSort(item, orderNum) {
      changeSort({ orderNum: orderNum, id: item.${replaceDto.FistLowerPk} }).then(
        (response) => {
          this.msgSuccess("修改成功");
          this.getList();
          this.showEditSort = false;
        }
      );
    },
$end
$if(replaceDto.UploadFile == 1)
    //图片上传成功方法
    handleUploadSuccess(CsharpFieldFl, filelist) {
      this.form[CsharpFieldFl] = filelist;
    },
$end
$foreach(item in genTable.Columns)
$if((item.HtmlType == "radio" || item.HtmlType == "select" || item.HtmlType == "checkbox"))
    // ${item.ColumnComment}字典翻译
    ${item.CsharpFieldFl}Format(row, column) {
      return this.selectDictLabel(this.${item.CsharpFieldFl}Options, row.${item.CsharpFieldFl});
    },
$end
$end
    /** 提交按钮 */
    submitForm: function () {
      this.${refs}refs["form"].validate((valid) => {
        if (valid) {
$foreach(item in genTable.Columns)
$if(item.HtmlType == "checkbox")
          this.form.${item.ColumnName} = this.form.${item.columnName}Checked.toString();
$end
$end
          console.log(JSON.stringify(this.form));
          
          if (this.form.${replaceDto.FistLowerPk} != undefined && this.title === "修改数据") {
            update${genTable.BusinessName}(this.form)
              .then((res) => {
                this.msgSuccess("修改成功");
                this.open = false;
                this.getList();
            })
            .catch((err) => {
                //TODO 错误逻辑
              });
          } else {
            add${genTable.BusinessName}(this.form)
              .then((res) => {
                this.msgSuccess("新增成功");
                this.open = false;
                this.getList();
            })
            .catch((err) => {
                //TODO 错误逻辑
              });
          }
        }
      });
    },
    /** 导出按钮操作 */
    handleExport() {
      const queryParams = this.queryParams;
      this.${confirm}confirm("是否确认导出所有${genTable.functionName}数据项?", "警告", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning",
      })
        .then(function () {
          return export${genTable.BusinessName}(queryParams);
        })
        .then((response) => {
          this.download(response.data.path);
        });
    },
  },
};
</script>